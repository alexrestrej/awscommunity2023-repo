AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Submit a CloudFormation source artifact
  to an Amazon S3 location before building the pipeline. The pipeline uses the
  artifact to automatically create stacks and change sets.
  **WARNING** This template creates an Amazon EC2 instance. You will be billed
  for the AWS resources used when you create a stack using this template.

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
    Default: awscommunity-stack ##TODO: Dejar pidiendo parametro
  BranchName:
    Description: CodeCommit branch name
    Type: String
    Default: main
  RepositoryName:
    Description: CodeComit repository name
    Type: String
    Default: community-demo-repo ##TODO: Dejar pidiendo parametro
  EC2Template:
    Default: template-ec2.yaml
    Description: The file name of the EC2 template
    Type: String
  DevEC2StackConfig:
    Default: params-ec2-dev.json
    Description: The configuration file name for the EC2 stack
    Type: String
  ProdEC2StackConfig:
    Default: params-ec2-prod.json
    Description: The configuration file name for the EC2 stack
    Type: String
  ALBTemplate:
    Default: template-alb.yaml
    Description: The file name of the EC2 template
    Type: String
  DevALBStackConfig:
    Default: params-alb-dev.json
    Description: The configuration file name for the EC2 stack
    Type: String
  ProdALBStackConfig:
    Default: params-alb-prod.json
    Description: The configuration file name for the EC2 stack
    Type: String
  RDSTemplate:
    Default: template-rds.yaml
    Description: The file name of the RDS template
    Type: String
  DevRDStackConfig:
    Default: params-rds-dev.json
    Description: The configuration file name for the RDS stack
    Type: String
  ProdRDStackConfig:
    Default: params-rds-prod.json
    Description: The configuration file name for the RDS stack
    Type: String    
  DevStackName:
    Default: AWSCommunityDemo-dev
    Description: A name for the stack Dev
    Type: String
  ProdStackName:
    Default: AWSCommunityDemo-prod
    Description: A name for the stack
    Type: String  
  ChangeSetName:
    Default: UpdatePreview
    Description: A name for the production stack change set
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - Email
      - Label:
          default: "Development Stack Settings"
        Parameters:
          - StackName
          - EC2Template
          - ALBTemplate
          - RDSTemplate
          - DevEC2StackConfig
          - DevALBStackConfig
          - DevRDStackConfig
      - Label:
          default: "Production Stack Settings"
        Parameters:
          - ChangeSetName
          - StackName
          - ProdEC2StackConfig
          - ProdALBStackConfig
          - ProdRDStackConfig

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: SourceStage
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                BranchName: !Ref BranchName
                RepositoryName: !Ref RepositoryName
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 1
        - Name: DeployDevStage
          Actions:
            - Name: EC2Stack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              # OutputArtifacts:
              #   - Name: EC2StackOutput
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                OutputFileName: EC2Output.json
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-ec2"
                TemplateConfiguration: !Sub "TemplateSource::${DevEC2StackConfig}"
                TemplatePath: !Sub "TemplateSource::${EC2Template}"
              RunOrder: 2
            - Name: ALBStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-alb"
                TemplateConfiguration: !Sub "TemplateSource::${DevALBStackConfig}"
                TemplatePath: !Sub "TemplateSource::${ALBTemplate}"
              RunOrder: 3
            - Name: RDSStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-rds"
                TemplateConfiguration: !Sub "TemplateSource::${DevRDStackConfig}"
                TemplatePath: !Sub "TemplateSource::${RDSTemplate}"
              RunOrder: 4  
            - Name: DeleteALBStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-alb"
              RunOrder: 5
            - Name: DeleteRDStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-rds"
              RunOrder: 6  
            - Name: DeleteEC2Stack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${DevStackName}-ec2"
              RunOrder: 7  

        
        - Name: DeployProdStage
          Actions:
            - Name: EC2Stack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-ec2"
                ChangeSetName: !Ref ChangeSetName
                TemplateConfiguration: !Sub "TemplateSource::${ProdEC2StackConfig}"
                TemplatePath: !Sub "TemplateSource::${EC2Template}"
              RunOrder: 1
            - Name: ALBStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-alb"
                ChangeSetName: !Ref ChangeSetName
                TemplateConfiguration: !Sub "TemplateSource::${ProdALBStackConfig}"
                TemplatePath: !Sub "TemplateSource::${ALBTemplate}"
              RunOrder: 2
            - Name: RDSStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-rds"
                ChangeSetName: !Ref ChangeSetName
                TemplateConfiguration: !Sub "TemplateSource::${ProdRDStackConfig}"
                TemplatePath: !Sub "TemplateSource::${RDSTemplate}"
              RunOrder: 3 
   
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the stack. Do you want to implement the changes?'
              RunOrder: 4
            - Name: ExecuteChangeSetEC2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-ec2"
              RunOrder: 5
            - Name: ExecuteChangeSetALB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-alb"
              RunOrder: 6
            - Name: ExecuteChangeSetRDS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub "${ProdStackName}-rds"
              RunOrder: 7

              
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'rds:*'
                  - 'secretsmanager:*'
                Effect: Allow
                Resource: '*'
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codecommit:*'
                Effect: Allow
                Resource: '*'